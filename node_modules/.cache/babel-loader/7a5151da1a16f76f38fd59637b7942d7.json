{"ast":null,"code":"var _jsxFileName = \"/Users/Mao/Desktop/React/course-app/src/Components/MovieSearcher.js\";\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nexport default function MovieSearcher() {\n  const [query, setQuery] = useState(\"\");\n  const [movie, setMovie] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault();\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=7d382303dbb8a3a849336128190d514c&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovie(data.results);\n      console.log(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieForm, {\n    onChange: e => setQuery(e.target.value),\n    searchMovies: searchMovies,\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, movie.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/React.createElement(MovieResult, {\n    movie: movie,\n    key: movie.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction MovieResult(props) {\n  const movie = props.movie;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card--image\",\n    src: `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`,\n    alt: movie.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"card--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"RELEASE DATE: \", movie.release_date)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"RATING: \", movie.vote_average)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card--desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, movie.overview)));\n}\n\nfunction MovieForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: props.searchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    name: \"query\",\n    placeholder: \"i.e. Jurassic Park\",\n    value: props.query,\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Search\"));\n}","map":{"version":3,"sources":["/Users/Mao/Desktop/React/course-app/src/Components/MovieSearcher.js"],"names":["React","useState","MovieSearcher","query","setQuery","movie","setMovie","searchMovies","e","preventDefault","url","res","fetch","data","json","results","console","log","err","error","target","value","filter","poster_path","map","id","MovieResult","props","title","release_date","vote_average","overview","MovieForm","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\n\nexport default function MovieSearcher() {\n  const [query, setQuery] = useState(\"\");\n  const [movie, setMovie] = useState([]);\n\n  const searchMovies = async (e) => {\n    e.preventDefault();\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=7d382303dbb8a3a849336128190d514c&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovie(data.results);\n      console.log(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <MovieForm\n        onChange={(e) => setQuery(e.target.value)}\n        searchMovies={searchMovies}\n        query={query}\n      />\n\n      <div className=\"card-list\">\n        {movie\n          .filter((movie) => movie.poster_path)\n          .map((movie) => (\n            <MovieResult movie={movie} key={movie.id} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MovieResult(props) {\n  const movie = props.movie;\n  return (\n    <div className=\"card\">\n      <img\n        className=\"card--image\"\n        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <h1 className=\"card--title\">{movie.title}</h1>\n      <p>\n        <small>RELEASE DATE: {movie.release_date}</small>\n      </p>\n      <p>\n        <small>RATING: {movie.vote_average}</small>\n      </p>\n      <p className=\"card--desc\">\n        <small>{movie.overview}</small>\n      </p>\n    </div>\n  );\n}\n\nfunction MovieForm(props) {\n  return (\n    <form className=\"form\" onSubmit={props.searchMovies}>\n      <label className=\"label\" htmlFor=\"query\">\n        Movie Name\n      </label>\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"i.e. Jurassic Park\"\n        value={props.query}\n        onChange={props.onChange}\n      />\n      <button className=\"button\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}