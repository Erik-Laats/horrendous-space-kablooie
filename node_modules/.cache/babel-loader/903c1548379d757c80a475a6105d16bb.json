{"ast":null,"code":"var _jsxFileName = \"/Users/Mao/Desktop/React/course-app/src/MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randInt = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const newMeme = this.state.allMemeImgs[randInt];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"topText\",\n      value: this.state.topText,\n      type: \"text\",\n      placeholder: \"top text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"topText\",\n      value: this.state.topText,\n      type: \"text\",\n      placeholder: \"top text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"botton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.state.bottomText));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/Mao/Desktop/React/course-app/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","randImage","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","handleSubmit","preventDefault","randInt","Math","floor","random","length","newMeme","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,SAAS,EAAE,+BAHA;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEE,QAAAA;AAAF,UAAYF,QAAQ,CAACG,IAA3B;AACA,WAAKC,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAEQ;AADD,OAAd;AAGD,KAPH;AAQD;;AAEDP,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACA,SAAKJ,QAAL,CAAc;AACZ,OAACE,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDE,EAAAA,YAAY,CAACJ,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKxB,KAAL,CAAWI,WAAX,CAAuBqB,MAAlD,CAAhB;AACA,UAAMC,OAAO,GAAG,KAAK1B,KAAL,CAAWI,WAAX,CAAuBiB,OAAvB,CAAhB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWC,OAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,QAAQ,EAAE,KAAKI,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,QAAQ,EAAE,KAAKI,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,eAiBE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKL,KAAL,CAAWC,OAAhC,CAjBF,eAkBE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAlBF,CADF;AAsBD;;AA3DyC;;AA8D5C,eAAeL,aAAf","sourcesContent":["import React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json)\n      .then((response) => {\n        const { memes } = response.data;\n        this.setState({\n          allMemeImgs: memes,\n        });\n      });\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randInt = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const newMeme = this.state.allMemeImgs[randInt];\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"meme-form\">\n          <input\n            name=\"topText\"\n            value={this.state.topText}\n            type=\"text\"\n            placeholder=\"top text\"\n            onChange={this.handleChange}\n          />\n          <input\n            name=\"topText\"\n            value={this.state.topText}\n            type=\"text\"\n            placeholder=\"top text\"\n            onChange={this.handleChange}\n          />\n        </form>\n        <h2 className=\"top\">{this.state.topText}</h2>\n        <h2 className=\"botton\">{this.state.bottomText}</h2>\n      </div>\n    );\n  }\n}\n\nexport default MemeGenerator;\n"]},"metadata":{},"sourceType":"module"}